type MainPassenger {
  firstName: String!
  lastName: String!
  birthdate: String!
  phoneNumber: String!
  email: String!
  starts: String!
  ends: String!
  suffix: String!
}

type PassengerDetails {
  id: ID
  birthdate: String!
  firstName: String!
  lastName: String!
  suffix: String!
}

type Activity @model @auth(rules: [{allow: private, operations: [read]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: groups, groups: ["ap-south-1_wmFFMNf1O_Google"], operations: [read]}, {allow: public, operations: [read]}]) {
  id: ID!
  name: String
  description: String
  image: String
  link: String
  packageName: String
  cost: Float
  packageID: ID! @index(name: "byPackage")
}

type Enquiry @model @auth(rules: [{allow: public}]) {
  id: ID!
  destination_name: String
  name: String
  email: String
  number_of_people: Int
  vacation_type: String
  phone_number: String
}

type Gallery @model @auth(rules: [{allow: public, operations: [read]}, {allow: private, operations: [read]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: groups, groups: ["ap-south-1_wmFFMNf1O_Google"], operations: [read]}]) {
  id: ID!
  image: String!
  packageID: ID! @index(name: "byPackage")
}

type Registration @model @auth(rules: [{allow: private, operations: [create, read, update]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: groups, groups: ["ap-south-1_wmFFMNf1O_Google"], operations: [read, create, update]}]) {
  id: ID!
  total_cost: Float!
  userinfoID: ID! @index(name: "byUserInfo")
  Package: Package! @hasOne
  activitiesId: [String!]
  passengers: [PassengerDetails!]
  mainPassenger: MainPassenger!
  bookingStatus: String!
  packageName: String!
}

type Review @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: String
  review: String
}

type Package @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: private, operations: [read]}]) {
  id: ID!
  name: String!
  contact: String!
  description: String!
  location: String!
  cost: Float!
  image: String!
  details_file: String!
  is_premium_flag: Boolean!
  video_link: String!
  Activities: [Activity] @hasMany(indexName: "byPackage", fields: ["id"])
  Galleries: [Activity] @hasMany(indexName: "byPackage", fields: ["id"])
  duration: String!
}

type UserInfo @model @auth(rules: [{allow: private, operations: [create, read, update]}]) {
  id: ID!
  dob: String
  phone_number: String
  email: String
  Registrations: [Registration!] @hasMany(indexName: "byUserInfo", fields: ["id"])
  name: String
}
 